import { Router } from 'express'; import { pool } from '../db.js'; import { auth } from '../middleware/auth.js'; const router=Router();
router.post('/register', auth(), async (req,res)=>{ const { identifier, store_id } = req.body; if(!identifier) return res.status(400).json({ error:'identifier é obrigatório' }); const { rows:cr } = await pool.query('SELECT * FROM clients WHERE cpf=$1 OR phone=$1 OR email=$1 LIMIT 1', [identifier]); const client=cr[0]; if(!client) return res.status(404).json({ error:'Cliente não encontrado' }); const storeId = req.user.role==='OPERATOR' ? req.user.store_id : (store_id ?? null); const { rows:v } = await pool.query('INSERT INTO visits (client_id, store_id) VALUES ($1,$2) RETURNING id, created_at, store_id', [client.id, storeId]);
  let visits_goal=5; if(storeId){ const g=await pool.query('SELECT COALESCE(meta_visitas,5) AS goal FROM stores WHERE id=$1', [storeId]); visits_goal=g.rows[0]?.goal ?? 5 }
  const lastRed=await pool.query(`SELECT created_at FROM redemptions WHERE client_id=$1 ${storeId?'AND store_id=$2':''} ORDER BY created_at DESC LIMIT 1`, storeId?[client.id, storeId]:[client.id]); const since=lastRed.rows[0]?.created_at || '1970-01-01';
  const count=await pool.query(`SELECT COUNT(*)::int AS c FROM visits WHERE client_id=$1 ${storeId?'AND store_id=$2':''} AND created_at > $${storeId?3:2}`, storeId?[client.id, storeId, since]:[client.id, since]); const visits_since_last=count.rows[0].c;
  const achieved = visits_since_last >= Number(visits_goal);
  res.json({ visit:v[0], client:{ id:client.id, name:client.name, email:client.email }, visits_since_last, achieved, reward_name:'Brinde', visits_goal });
});
router.get('/export', auth(), async (req,res)=>{ const isOp=req.user.role==='OPERATOR'; const params=[]; let sql=`SELECT v.id, c.name AS client_name, v.store_id, to_char(v.created_at,'YYYY-MM-DD HH24:MI:SS') AS created_at FROM visits v JOIN clients c ON c.id=v.client_id`; if(isOp){ sql+=' WHERE v.store_id=$1'; params.push(req.user.store_id) } sql+=' ORDER BY v.id DESC'; const { rows } = await pool.query(sql, params); const header='id;client_name;store_id;created_at\n'; const body=rows.map(r=>[r.id,r.client_name,r.store_id || '',r.created_at].join(';')).join('\n'); res.setHeader('Content-Type','text/csv; charset=utf-8'); res.setHeader('Content-Disposition','attachment; filename="visits.csv"'); res.send('\ufeff'+header+body) });
export default router;
