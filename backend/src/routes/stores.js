import { Router } from 'express'; import { pool } from '../db.js'; import { auth } from '../middleware/auth.js'; const router=Router();
router.get('/', auth(), async (_req,res)=>{ const { rows } = await pool.query('SELECT id, name, meta_visitas FROM stores ORDER BY name ASC'); res.json(rows) });
router.post('/', auth('ADMIN'), async (req,res)=>{ const { name, meta_visitas=null } = req.body; if(!name) return res.status(400).json({ error:'name é obrigatório' }); const { rows } = await pool.query('INSERT INTO stores (name, meta_visitas) VALUES ($1,$2) RETURNING id, name, meta_visitas', [name, meta_visitas]); res.status(201).json(rows[0]) });
router.put('/:id', auth('ADMIN'), async (req,res)=>{ const { id } = req.params; const { name, meta_visitas } = req.body; await pool.query('UPDATE stores SET name=COALESCE($1,name), meta_visitas=COALESCE($2,meta_visitas) WHERE id=$3', [name, meta_visitas, id]); const { rows } = await pool.query('SELECT id, name, meta_visitas FROM stores WHERE id=$1', [id]); res.json(rows[0]) });
router.delete('/:id', auth('ADMIN'), async (req,res)=>{ await pool.query('DELETE FROM stores WHERE id=$1', [req.params.id]); res.json({ ok:true }) });
export default router;